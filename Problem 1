import numpy as np
import matplotlib.pyplot as plt
def f(x):
  if (x!= 0):
     return (np.sin(x))/x
  else:
     return 1
def g(k):
    if ((k>-1) and (k<1)):
        return  np.sqrt((np. pi)/2.0)
    else:
        return 0
    
xmin = -15.0
xmax = 15.0
numpoints = 64
dx = (xmax-xmin)/(numpoints -1)
sampled_data = np.zeros(numpoints)
xarr = np.zeros(numpoints)
for i in range(numpoints):
  sampled_data[i] = f(xmin+i*dx)
  xarr[i] = xmin+i*dx
nft = np.fft.fft(sampled_data, norm='ortho') 
karr = np.fft.fftfreq(numpoints, d=dx)
karr = 2*np.pi*karr
factor = np.exp(-1j * karr * xmin)
aft = dx * np.sqrt(numpoints/(2.0*np.pi)) * factor * nft  
np.fft.fftshift(aft)
np.fft.fftshift(karr)
aft = np.fft.fftshift(aft)
karr = np.fft.fftshift(karr)
soln = np.zeros(karr.size)
for i in range (karr.size):
    soln[i] = g(karr[i])
plt.plot(karr, aft, "r^" )
plt.plot(karr, soln, color = 'r')
