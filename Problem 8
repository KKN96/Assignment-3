import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import axes3d
def f(x,y):
  return np.exp(-(x*x)+ (y*y))
xmin = -5.0
xmax = 5.0
ymin = -5.0
ymax = 5.0
n_x = 128
n_y = 128
dx = (xmax-xmin)/(n_x - 1)
dy = (ymax-ymin)/(n_y - 1)
sampled_data = np.zeros((n_x, n_y))
xarr = np.zeros(n_x)
yarr = np.zeros(n_y)
for i in range(numpoints):
    for j in range(numpoints):
     sampled_data[i] [j] = f(xmin+i*dx, ymin+j*dy)
     xarr[i] = xmin+i*dx
     yarr[j] = ymin+j*dy  
nft = np.fft.fft2(sampled_data, norm='ortho') 
kxarr = np.fft.fftfreq(nft.shape[0], d=dx)
kyarr = np.fft.fftfreq(nft.shape[1], d=dy)
kxarr = 2*np.pi*kxarr
kyarr = 2*np.pi*kyarr
factor = np.exp(-1j * kxarr * xmin)* np.exp(-1j * kyarr * ymin)
aft =dy* dx * np.sqrt(numpoints/(2.0*np.pi))* np.sqrt(numpoints/(2.0*np.pi)) * factor * nft  
M,N=np.meshgrid(kxarr, kyarr)
P=np.abs(aft)
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax.plot_surface(M, N, P)
