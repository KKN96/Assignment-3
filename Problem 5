import numpy as np
import matplotlib.pyplot as plt
import time
def dft(q, s):
    wq= 0 + 1j*0
    n= s.size
    for p in range(n):
        wq=wq+s[p]*np.exp(-1j*2*np.pi*q*p/n) #following equation 7 in lecture 16
    return wq/(np.sqrt(n))
N=4
timedft=np.zeros(1)
timefft=np.zeros(1)
Narr=np.zeros(1)
Parr=np.zeros(1)
while(N<=100):
     sample_data=np.arange(N)
     dft_manual=np.zeros(N, dtype=complex)
     timea= time.time()
     for i in range(N):
        dft_manual[i]= dft(i, sample_data)
     timeb=time.time()
     timedft=np.append(timedft, (timeb-timea))
     Narr=np.append(Narr,N)   
     N=N+1
for P in range(4,100):
     sample_data=np.arange(P)
     time1= time.time()
     dft_np=np.fft.fft(sample_data)
     time2 = time.time()
     timefft=np.append(timefft, (time2-time1))
     Parr=np.append(Parr,P)   
     P=P+1
plt.plot(Narr, timedft, color='b')
plt.plot(Parr, timefft, color='r')
